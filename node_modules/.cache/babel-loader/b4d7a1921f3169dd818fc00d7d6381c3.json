{"ast":null,"code":"var _jsxFileName = \"/Users/ridgeagyei/Desktop/KingsProject/app/src/client/Lecturers/mutations/auth-login.js\";\nimport React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport history from '../../components/history';\nconst LOGIN = gql`\n  mutation login($username : String!, $password : String!) {\n    lecturerLogin(username : $username, password : $password) {\n      token\n      user{\n        username\n      }\n    }\n }`;\nexport default class LoginMutation extends Component {\n  render() {\n    const {\n      children,\n      changelecturerLoginState\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Mutation, {\n      update: (store, {\n        data: {\n          lecturerLogin\n        }\n      }) => {\n        if (lecturerLogin.token) {\n          localStorage.setItem('lecjwt', lecturerLogin.token);\n          history.push('/lecturer/home');\n          history.go();\n          changelecturerLoginState(true);\n          console.log(lecturerLogin.user.username);\n        }\n      },\n      mutation: LOGIN,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }\n    }, (lecturerLogin, {\n      loading,\n      error\n    }) => React.Children.map(children, function (child) {\n      return React.cloneElement(child, {\n        lecturerLogin,\n        loading,\n        error\n      });\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/ridgeagyei/Desktop/KingsProject/app/src/client/Lecturers/mutations/auth-login.js"],"names":["React","Component","Mutation","gql","history","LOGIN","LoginMutation","render","children","changelecturerLoginState","props","store","data","lecturerLogin","token","localStorage","setItem","push","go","console","log","user","username","loading","error","Children","map","child","cloneElement"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AAGA,MAAMC,KAAK,GAAGF,GAAI;;;;;;;;GAAlB;AAWA,eAAe,MAAMG,aAAN,SAA4BL,SAA5B,CAAsC;AACnDM,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAyC,KAAKC,KAApD;AACA,wBACE,oBAAC,QAAD;AACE,MAAA,MAAM,EAAI,CAACC,KAAD,EAAQ;AAAEC,QAAAA,IAAI,EAAE;AAAEC,UAAAA;AAAF;AAAR,OAAR,KAAwC;AAC9C,YAAGA,aAAa,CAACC,KAAjB,EAAwB;AACpBC,UAAAA,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA+BH,aAAa,CAACC,KAA7C;AAEAV,UAAAA,OAAO,CAACa,IAAR,CAAa,gBAAb;AACAb,UAAAA,OAAO,CAACc,EAAR;AACAT,UAAAA,wBAAwB,CAAC,IAAD,CAAxB;AACAU,UAAAA,OAAO,CAACC,GAAR,CAAYP,aAAa,CAACQ,IAAd,CAAmBC,QAA/B;AACH;AACJ,OAVH;AAWA,MAAA,QAAQ,EAAEjB,KAXV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAYG,CAACQ,aAAD,EAAgB;AAAEU,MAAAA,OAAF;AAAWC,MAAAA;AAAX,KAAhB,KACCxB,KAAK,CAACyB,QAAN,CAAeC,GAAf,CAAmBlB,QAAnB,EAA6B,UAASmB,KAAT,EAAe;AAC1C,aAAO3B,KAAK,CAAC4B,YAAN,CAAmBD,KAAnB,EAA0B;AAAEd,QAAAA,aAAF;AAAiBU,QAAAA,OAAjB;AAA0BC,QAAAA;AAA1B,OAA1B,CAAP;AACD,KAFD,CAbJ,CADF;AAoBD;;AAvBkD","sourcesContent":["import React, { Component } from 'react';\nimport { Mutation } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport history from '../../components/history'\n\n\nconst LOGIN = gql`\n  mutation login($username : String!, $password : String!) {\n    lecturerLogin(username : $username, password : $password) {\n      token\n      user{\n        username\n      }\n    }\n }`;\n \n\nexport default class LoginMutation extends Component {\n  render() {\n    const { children, changelecturerLoginState } = this.props;\n    return (\n      <Mutation\n        update = {(store, { data: { lecturerLogin } }) => {\n            if(lecturerLogin.token) {\n                localStorage.setItem('lecjwt', lecturerLogin.token);\n                \n                history.push('/lecturer/home')\n                history.go()\n                changelecturerLoginState(true);\n                console.log(lecturerLogin.user.username)\n            }\n        }}\n      mutation={LOGIN}>\n        {(lecturerLogin, { loading, error}) =>\n          React.Children.map(children, function(child){\n            return React.cloneElement(child, { lecturerLogin, loading, error });\n          })\n        }\n      </Mutation>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}