{"ast":null,"code":"var _jsxFileName = \"/Users/ridgeagyei/Desktop/KingsProject/app/src/client/components/Mutations/auth-login.js\";\nimport React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gpl from 'graphql-tag';\nconst LOGIN = gpl`\n    mutation login($email: String!, $password: Int!){\n        login(email: $email, password: $password){\n            token\n        }\n    }\n`;\nexport default class LoginMutation extends Component {\n  render() {\n    const {\n      children\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Mutation, {\n      update: (store, {\n        data: {\n          login\n        }\n      }) => {\n        if (login.token) {\n          localStorage.setItem(\"jwt\", login.token);\n        }\n      },\n      mutation: LOGIN,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }\n    }, (login, {\n      loading,\n      error\n    }) => React.Children.map(children, function (child) {\n      return React.cloneElement(child, {\n        login,\n        loading,\n        error\n      });\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/ridgeagyei/Desktop/KingsProject/app/src/client/components/Mutations/auth-login.js"],"names":["React","Component","Mutation","gpl","LOGIN","LoginMutation","render","children","props","store","data","login","token","localStorage","setItem","loading","error","Children","map","child","cloneElement"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAGA,MAAMC,KAAK,GAAGD,GAAI;;;;;;CAAlB;AAQA,eAAe,MAAME,aAAN,SAA4BJ,SAA5B,CAAsC;AACnDK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKC,KAA1B;AACA,wBACE,oBAAC,QAAD;AACE,MAAA,MAAM,EAAE,CAACC,KAAD,EAAQ;AAAEC,QAAAA,IAAI,EAAE;AAAEC,UAAAA;AAAF;AAAR,OAAR,KAAgC;AACtC,YAAIA,KAAK,CAACC,KAAV,EAAiB;AACfC,UAAAA,YAAY,CAACC,OAAb,CAAqB,KAArB,EAA4BH,KAAK,CAACC,KAAlC;AACD;AACF,OALH;AAME,MAAA,QAAQ,EAAER,KANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQG,CAACO,KAAD,EAAQ;AAAEI,MAAAA,OAAF;AAAWC,MAAAA;AAAX,KAAR,KACChB,KAAK,CAACiB,QAAN,CAAeC,GAAf,CAAmBX,QAAnB,EAA6B,UAAUY,KAAV,EAAiB;AAC5C,aAAOnB,KAAK,CAACoB,YAAN,CAAmBD,KAAnB,EAA0B;AAAER,QAAAA,KAAF;AAASI,QAAAA,OAAT;AAAkBC,QAAAA;AAAlB,OAA1B,CAAP;AACD,KAFD,CATJ,CADF;AAgBD;;AAnBkD","sourcesContent":["import React, { Component } from 'react';\nimport { Mutation } from 'react-apollo'\nimport gpl from 'graphql-tag'\n\n\nconst LOGIN = gpl`\n    mutation login($email: String!, $password: Int!){\n        login(email: $email, password: $password){\n            token\n        }\n    }\n`;\n\nexport default class LoginMutation extends Component {\n  render() {\n    const { children } = this.props;\n    return (\n      <Mutation\n        update={(store, { data: { login } }) => {\n          if (login.token) {\n            localStorage.setItem(\"jwt\", login.token);\n          }\n        }}\n        mutation={LOGIN}\n      >\n        {(login, { loading, error }) =>\n          React.Children.map(children, function (child) {\n            return React.cloneElement(child, { login, loading, error });\n          })\n        }\n      </Mutation>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}