{"ast":null,"code":"var _jsxFileName = \"/Users/ridgeagyei/Desktop/KingsProject/app/src/client/admin/mutations/auth-login.js\";\nimport React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport history from '../../components/history';\nconst LOGIN = gql`\n  mutation login($username : String!, $password : String!) {\n    adminLogin(username : $username, password : $password) {\n      token\n    }\n }`;\nexport default class LoginMutation extends Component {\n  render() {\n    const {\n      children,\n      changeLoginState\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Mutation, {\n      update: (store, {\n        data: {\n          ogin\n        }\n      }) => {\n        if (login.token) {\n          localStorage.setItem('jwt', login.token);\n          changeLoginState(true);\n          history.push('/admin/home');\n          history.go();\n        }\n      },\n      mutation: LOGIN,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    }, (login, {\n      loading,\n      error\n    }) => React.Children.map(children, function (child) {\n      return React.cloneElement(child, {\n        login,\n        loading,\n        error\n      });\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/ridgeagyei/Desktop/KingsProject/app/src/client/admin/mutations/auth-login.js"],"names":["React","Component","Mutation","gql","history","LOGIN","LoginMutation","render","children","changeLoginState","props","store","data","ogin","login","token","localStorage","setItem","push","go","loading","error","Children","map","child","cloneElement"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AAGA,MAAMC,KAAK,GAAGF,GAAI;;;;;GAAlB;AAQA,eAAe,MAAMG,aAAN,SAA4BL,SAA5B,CAAsC;AACnDM,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAiC,KAAKC,KAA5C;AACA,wBACE,oBAAC,QAAD;AACE,MAAA,MAAM,EAAI,CAACC,KAAD,EAAQ;AAAEC,QAAAA,IAAI,EAAE;AAAEC,UAAAA;AAAF;AAAR,OAAR,KAA+B;AACrC,YAAGC,KAAK,CAACC,KAAT,EAAgB;AACZC,UAAAA,YAAY,CAACC,OAAb,CAAqB,KAArB,EAA4BH,KAAK,CAACC,KAAlC;AACAN,UAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAL,UAAAA,OAAO,CAACc,IAAR,CAAa,aAAb;AACAd,UAAAA,OAAO,CAACe,EAAR;AACH;AACJ,OARH;AASA,MAAA,QAAQ,EAAEd,KATV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUG,CAACS,KAAD,EAAQ;AAAEM,MAAAA,OAAF;AAAWC,MAAAA;AAAX,KAAR,KACCrB,KAAK,CAACsB,QAAN,CAAeC,GAAf,CAAmBf,QAAnB,EAA6B,UAASgB,KAAT,EAAe;AAC1C,aAAOxB,KAAK,CAACyB,YAAN,CAAmBD,KAAnB,EAA0B;AAAEV,QAAAA,KAAF;AAASM,QAAAA,OAAT;AAAkBC,QAAAA;AAAlB,OAA1B,CAAP;AACD,KAFD,CAXJ,CADF;AAkBD;;AArBkD","sourcesContent":["import React, { Component } from 'react';\nimport { Mutation } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport history from '../../components/history'\n\n\nconst LOGIN = gql`\n  mutation login($username : String!, $password : String!) {\n    adminLogin(username : $username, password : $password) {\n      token\n    }\n }`;\n \n\nexport default class LoginMutation extends Component {\n  render() {\n    const { children, changeLoginState } = this.props;\n    return (\n      <Mutation\n        update = {(store, { data: { ogin } }) => {\n            if(login.token) {\n                localStorage.setItem('jwt', login.token);\n                changeLoginState(true);\n                history.push('/admin/home')\n                history.go()\n            }\n        }}\n      mutation={LOGIN}>\n        {(login, { loading, error}) =>\n          React.Children.map(children, function(child){\n            return React.cloneElement(child, { login, loading, error });\n          })\n        }\n      </Mutation>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}