{"ast":null,"code":"var _jsxFileName = \"/Users/ridgeagyei/Desktop/KingsProject/app/src/client/components/Mutations/auth-signup.js\";\nimport React, { Component } from 'react';\nimport { Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nconst SIGNUP = gql`\n  mutation signup($email : String!, $password : String!, $username : String!) {\n    signup(email : $email, password : $password, username : $username) {\n    token\n  }\n}`;\nexport default class SignupMutation extends Component {\n  render() {\n    const {\n      children,\n      changeLoginState\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Mutation, {\n      update: (store, {\n        data: {\n          signup\n        }\n      }) => {\n        if (signup.token) {\n          localStorage.setItem('jwt', signup.token);\n          changeLoginState(true);\n        }\n      },\n      mutation: SIGNUP,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }, (signup, {\n      loading,\n      error\n    }) => React.Children.map(children, function (child) {\n      return React.cloneElement(child, {\n        signup,\n        loading,\n        error\n      });\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/ridgeagyei/Desktop/KingsProject/app/src/client/components/Mutations/auth-signup.js"],"names":["React","Component","Mutation","gql","SIGNUP","SignupMutation","render","children","changeLoginState","props","store","data","signup","token","localStorage","setItem","loading","error","Children","map","child","cloneElement"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,MAAMC,MAAM,GAAGD,GAAI;;;;;EAAnB;AAOA,eAAe,MAAME,cAAN,SAA6BJ,SAA7B,CAAuC;AAClDK,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAiC,KAAKC,KAA5C;AACA,wBACI,oBAAC,QAAD;AACI,MAAA,MAAM,EAAI,CAACC,KAAD,EAAQ;AAAEC,QAAAA,IAAI,EAAE;AAAEC,UAAAA;AAAF;AAAR,OAAR,KAAiC;AACvC,YAAGA,MAAM,CAACC,KAAV,EAAiB;AACbC,UAAAA,YAAY,CAACC,OAAb,CAAqB,KAArB,EAA4BH,MAAM,CAACC,KAAnC;AACAL,UAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH;AACJ,OANL;AAOI,MAAA,QAAQ,EAAEJ,MAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASK,CAACQ,MAAD,EAAS;AAAEI,MAAAA,OAAF;AAAWC,MAAAA;AAAX,KAAT,KACGjB,KAAK,CAACkB,QAAN,CAAeC,GAAf,CAAmBZ,QAAnB,EAA6B,UAASa,KAAT,EAAgB;AACzC,aAAOpB,KAAK,CAACqB,YAAN,CAAmBD,KAAnB,EAA0B;AAAER,QAAAA,MAAF;AAAUI,QAAAA,OAAV;AAAmBC,QAAAA;AAAnB,OAA1B,CAAP;AACH,KAFD,CAVR,CADJ;AAiBH;;AApBiD","sourcesContent":["import React, { Component } from 'react';\nimport { Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\nconst SIGNUP = gql`\n  mutation signup($email : String!, $password : String!, $username : String!) {\n    signup(email : $email, password : $password, username : $username) {\n    token\n  }\n}`;\n\nexport default class SignupMutation extends Component {\n    render() {\n        const { children, changeLoginState } = this.props;\n        return (\n            <Mutation\n                update = {(store, { data: { signup } }) => {\n                    if(signup.token) {\n                        localStorage.setItem('jwt', signup.token);\n                        changeLoginState(true);\n                    }\n                }}\n                mutation={SIGNUP}\n            >\n                {(signup, { loading, error}) => \n                    React.Children.map(children, function(child) {\n                        return React.cloneElement(child, { signup, loading, error });\n                    })\n                }\n            </Mutation>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}